{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,S,WAKA,IAAIC,EAAaC,SAASC,cAAc,kBACpCC,EAAOF,SAASC,cAAc,iBAC9BE,EAASH,SAASC,cAAc,mBAYpC,SAASG,EAAcC,EAAUC,GAC/B,IAAIC,EAAcC,OAAOT,EAAWU,OAASJ,EAAWG,OAAOF,GACzDI,EAAgBC,KAAKC,SAAW,GAWtC,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAET,WAAUY,YAAAV,IAEpBQ,EAAO,CAAEV,WAAUY,YAAAV,G,GAEpBA,E,IAIFW,MAAK,SAAAC,G,IAAGC,EAAQD,EAARd,SAAUY,EAAWE,EAAXF,YACjBI,EAAAxB,GAASyB,OAAOC,QACd,sBAAyCC,OAAnBJ,EAAW,EAAE,QAAkBI,OAAZP,EAAY,M,IAGxDQ,OAAM,SAAAN,G,IAAGC,EAAQD,EAARd,SAAUY,EAAWE,EAAXF,YAClBI,EAAAxB,GAASyB,OAAOI,QACd,oBAAuCF,OAAnBJ,EAAW,EAAE,QAAkBI,OAAZP,EAAY,M,IAhChDjB,SAASC,cAAc,SAE7B0B,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBACNb,YAAW,WACT,IAAK,IAAIc,EAAI,EAAGA,EAAI3B,EAAOM,MAAOqB,IAChC1B,EAAc0B,EAAG5B,EAAKO,M,GAEvBV,EAAWU,M","sources":["src/js/03-promises.js"],"sourcesContent":["// Описаний в документації\nimport Notiflix from 'notiflix';\n// Додатковий імпорт стилів\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\nimport 'notiflix/dist/notiflix-3.2.6.min.js';\n\nlet firstDelay = document.querySelector(\"[name='delay']\");\nlet step = document.querySelector(\"[name='step']\");\nlet amount = document.querySelector(\"[name='amount']\");\nlet form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  setTimeout(() => {\n    for (let i = 0; i < amount.value; i++) {\n      createPromise(i, step.value);\n    }\n  }, firstDelay.value);\n});\n\nfunction createPromise(position, delay) {\n  let timeCounter = Number(firstDelay.value) + position * Number(delay);\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, timeCounter });\n      } else {\n        reject({ position, timeCounter });\n      }\n    }, timeCounter);\n  });\n\n  return promise\n    .then(({ position, timeCounter }) => {\n      Notiflix.Notify.success(\n        `Fullfilled promise ${position + 1} in ${timeCounter}ms`\n      );\n    })\n    .catch(({ position, timeCounter }) => {\n      Notiflix.Notify.failure(\n        `Rejected promise ${position + 1} in ${timeCounter}ms`\n      );\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","timeCounter1","Number","value","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","timeCounter","then","param","_$position","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","i"],"version":3,"file":"03-promises.70a5f3fa.js.map"}